{
  "address": "0x8e74b0c3290eb0ec9fbbc522c8b2711f164553fa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9665e8f04bfffe59ef9a48e41077790f321cc6bd574ea23561a64f0a97b639e2",
  "receipt": {
    "to": null,
    "from": "0x2c8cbd5b766862627bb65d1701b9f3124d8709c7",
    "contractAddress": "0x8e74b0c3290eb0ec9fbbc522c8b2711f164553fa",
    "transactionIndex": "0x26",
    "gasUsed": "0xc2592",
    "logsBloom": "0x
    "blockHash": "0xeeffa8647db3fe81b16cd25d41a44f8dfaae9b100c893504bc3fc24d2f1376e7",
    "transactionHash": "0x9665e8f04bfffe59ef9a48e41077790f321cc6bd574ea23561a64f0a97b639e2",
    "logs": [],
    "blockNumber": "0x6271f0",
    "cumulativeGasUsed": "0x8d6dfb",
    "status": "0x1"
  },
  "args": [
    "0x694aa1769357215de4fac081bf1f309adc325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "0151932682e616074546011c773add84",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\r\\n\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    address public immutable i_owner;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address _priceFeeed) {\\r\\n        i_owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(_priceFeeed);\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        // Want to be able to set a minimum\\r\\n        // require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Didn't send enough\\\");\\r\\n        require(\\r\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\r\\n            \\\"Didn't send enough\\\"\\r\\n        );\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        // require(msg.sender == owner, \\\"Sender is not the owner\\\");\\r\\n\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n\\r\\n        // reset the array\\r\\n        funders = new address[](0);\\r\\n\\r\\n        // withdraw funds\\r\\n        // transfer\\r\\n\\r\\n        // msg.sender = address\\r\\n        // payable(msg.sender) = payable address\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // call\\r\\n        (bool callSuccess /* bytes memory dataReturned */, ) = payable(\\r\\n            msg.sender\\r\\n        ).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        // require(msg.sender == i_owner, \\\"Sender is not the owner\\\");\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // What happens if someone sends this contract ETH without calling the fund function\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x296098b6e555c434e0ba91af5f4f97b03fed49c9983e4d506143e3ab08be8c74\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // prettier-ignore\\r\\n        (,int price, , , ) = priceFeed.latestRoundData();\\r\\n\\r\\n        // ETH in terms of USD\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe277592f75c031da03d8286bcc68c55ec559e7bcb8a26d484de7a6357ce5e3c4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e62380380610e6283398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d0361015f600039600081816102d401526105590152610d036000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610791565b61050c565b6040516100d891906107d7565b60405180910390f35b3480156100ed57600080fd5b506100f6610524565b60405161010391906107d7565b60405180910390f35b34801561011857600080fd5b50610121610531565b60405161012e9190610851565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610557565b604051610163919061087b565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c2565b61057b565b6040516101a0919061087b565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ba90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061094c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610357576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103fc57600080828154811061037c5761037b61096c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061035a565b50600067ffffffffffffffff8111156104185761041761099b565b5b6040519080825280602002602001820160405280156104465781602001602082028036833780820191505090505b506000908051906020019061045c929190610687565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610483906109fb565b60006040518083038185875af1925050503d80600081146104c0576040519150601f19603f3d011682016040523d82523d6000602084013e6104c5565b606091505b5050905080610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610a5c565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c6836105f6565b90506000670de0b6b3a764000085836105df9190610aab565b6105e99190610b1c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106689190610bda565b5050509150506402540be4008161067f9190610c55565b915050919050565b828054828255906000526020600020908101928215610700579160200282015b828111156106ff5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a7565b5b50905061070d9190610711565b5090565b5b8082111561072a576000816000905550600101610712565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075e82610733565b9050919050565b61076e81610753565b811461077957600080fd5b50565b60008135905061078b81610765565b92915050565b6000602082840312156107a7576107a661072e565b5b60006107b58482850161077c565b91505092915050565b6000819050919050565b6107d1816107be565b82525050565b60006020820190506107ec60008301846107c8565b92915050565b6000819050919050565b600061081761081261080d84610733565b6107f2565b610733565b9050919050565b6000610829826107fc565b9050919050565b600061083b8261081e565b9050919050565b61084b81610830565b82525050565b60006020820190506108666000830184610842565b92915050565b61087581610753565b82525050565b6000602082019050610890600083018461086c565b92915050565b61089f816107be565b81146108aa57600080fd5b50565b6000813590506108bc81610896565b92915050565b6000602082840312156108d8576108d761072e565b5b60006108e6848285016108ad565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006109366012836108ef565b915061094182610900565b602082019050919050565b6000602082019050818103600083015261096581610929565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109e56000836109ca565b91506109f0826109d5565b600082019050919050565b6000610a06826109d8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a46600b836108ef565b9150610a5182610a10565b602082019050919050565b60006020820190508181036000830152610a7581610a39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ab6826107be565b9150610ac1836107be565b9250828202610acf816107be565b91508282048414831517610ae657610ae5610a7c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b27826107be565b9150610b32836107be565b925082610b4257610b41610aed565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b6c81610b4d565b8114610b7757600080fd5b50565b600081519050610b8981610b63565b92915050565b6000819050919050565b610ba281610b8f565b8114610bad57600080fd5b50565b600081519050610bbf81610b99565b92915050565b600081519050610bd481610896565b92915050565b600080600080600060a08688031215610bf657610bf561072e565b5b6000610c0488828901610b7a565b9550506020610c1588828901610bb0565b9450506040610c2688828901610bc5565b9350506060610c3788828901610bc5565b9250506080610c4888828901610b7a565b9150509295509295909350565b6000610c6082610b8f565b9150610c6b83610b8f565b9250828202610c7981610b8f565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cb157610cb0610a7c565b5b8282058414831517610cc657610cc5610a7c565b5b509291505056fea264697066735822122072bd4ba640ca82bb318a0f186ac04b46402678ff9e435b6163113f20f062e4ef64736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610791565b61050c565b6040516100d891906107d7565b60405180910390f35b3480156100ed57600080fd5b506100f6610524565b60405161010391906107d7565b60405180910390f35b34801561011857600080fd5b50610121610531565b60405161012e9190610851565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610557565b604051610163919061087b565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c2565b61057b565b6040516101a0919061087b565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ba90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061094c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610357576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103fc57600080828154811061037c5761037b61096c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061035a565b50600067ffffffffffffffff8111156104185761041761099b565b5b6040519080825280602002602001820160405280156104465781602001602082028036833780820191505090505b506000908051906020019061045c929190610687565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610483906109fb565b60006040518083038185875af1925050503d80600081146104c0576040519150601f19603f3d011682016040523d82523d6000602084013e6104c5565b606091505b5050905080610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610a5c565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c6836105f6565b90506000670de0b6b3a764000085836105df9190610aab565b6105e99190610b1c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106689190610bda565b5050509150506402540be4008161067f9190610c55565b915050919050565b828054828255906000526020600020908101928215610700579160200282015b828111156106ff5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a7565b5b50905061070d9190610711565b5090565b5b8082111561072a576000816000905550600101610712565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075e82610733565b9050919050565b61076e81610753565b811461077957600080fd5b50565b60008135905061078b81610765565b92915050565b6000602082840312156107a7576107a661072e565b5b60006107b58482850161077c565b91505092915050565b6000819050919050565b6107d1816107be565b82525050565b60006020820190506107ec60008301846107c8565b92915050565b6000819050919050565b600061081761081261080d84610733565b6107f2565b610733565b9050919050565b6000610829826107fc565b9050919050565b600061083b8261081e565b9050919050565b61084b81610830565b82525050565b60006020820190506108666000830184610842565b92915050565b61087581610753565b82525050565b6000602082019050610890600083018461086c565b92915050565b61089f816107be565b81146108aa57600080fd5b50565b6000813590506108bc81610896565b92915050565b6000602082840312156108d8576108d761072e565b5b60006108e6848285016108ad565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006109366012836108ef565b915061094182610900565b602082019050919050565b6000602082019050818103600083015261096581610929565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109e56000836109ca565b91506109f0826109d5565b600082019050919050565b6000610a06826109d8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a46600b836108ef565b9150610a5182610a10565b602082019050919050565b60006020820190508181036000830152610a7581610a39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ab6826107be565b9150610ac1836107be565b9250828202610acf816107be565b91508282048414831517610ae657610ae5610a7c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b27826107be565b9150610b32836107be565b925082610b4257610b41610aed565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b6c81610b4d565b8114610b7757600080fd5b50565b600081519050610b8981610b63565b92915050565b6000819050919050565b610ba281610b8f565b8114610bad57600080fd5b50565b600081519050610bbf81610b99565b92915050565b600081519050610bd481610896565b92915050565b600080600080600060a08688031215610bf657610bf561072e565b5b6000610c0488828901610b7a565b9550506020610c1588828901610bb0565b9450506040610c2688828901610bc5565b9350506060610c3788828901610bc5565b9250506080610c4888828901610b7a565b9150509295509295909350565b6000610c6082610b8f565b9150610c6b83610b8f565b9250828202610c7981610b8f565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cb157610cb0610a7c565b5b8282058414831517610cc657610cc5610a7c565b5b509291505056fea264697066735822122072bd4ba640ca82bb318a0f186ac04b46402678ff9e435b6163113f20f062e4ef64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}